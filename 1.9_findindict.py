"""
У вас два словаря, и вы хотите выяснить, что у них общего (одинаковые ключи, значения и т. п.).
"""

a = {
    'x': 1,
    'y': 2,
    'z': 3
}

b = {
    'w': 10,
    'x': 11,
    'y': 2
}

# Чтобы найти общие элементы, просто выполните обычный набор операций# с использованием методов keys() и items()

# Находим общие ключи
print(a.keys() & b.keys())

# Находим ключи, которые есть в a, но которых нет в b:
print(a.keys() - b.keys())

# Находим общие пары:
print(a.items() & b.items())

"""
Операции такого типа также могут быть использованы для изменения или
фильтрования содержимого словаря. Предположим, например, что вы хотите
создать новый словарь, в котором некоторые ключи удалены. Взгляните на этот
пример кода генератора словаря (dictionary comprehension):
"""

# Создаем новый словарь, из которого удалены некоторые ключи
c = {key:a[key] for key in a.keys() - {'z', 'w'}}
print(c)

"""
Словарь – это отображение множества ключей на множество значений. Метод сло-
варя keys() возвращает объект ключей словаря (dict_keys). Малоизвестная особен-
ность этих объектов заключается в том, что они поддерживают набор операций
над множествами: объединения, пересечения, разности. Так что если вам нужно
выполнить этот набор операций над ключами словаря, вы можете использовать
объект ключей словаря напрямую, без предварительного конвертирования во
множество.
Метод словаря items() возвращает объект значений словаря, состоящий из пар
(key, value). Этот объект поддерживает похожий набор операций и может быть ис-
пользован для выполнения таких операций, как поиск того, какие пары ключ–
значение являются общими для двух словарей.
Хотя метод словаря values() похож на предыдущие, он не поддерживает опера-
ции над множествами, описанные выше в этом рецепте. Это происходит, в част-
ности, по причине того, что, в отличие от ключей, значения могут и не быть уни-
кальными. Один этот факт делает бесполезным применение к ним операций над
множествами. Если же, однако, вы вынуждены выполнить такие операции, этого
можно добиться простым путем предварительного конвертирования значений во
множество.
"""
