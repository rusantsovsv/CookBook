"""
Возможно, ваша программа для взаимодействия с веб-сервисом для аутентифи-
кации последнего поколения столкнулась с сингулярностью, и ваш единственный
способ обойти это лежит через комплексную плоскость... Или же вам просто нуж-
но выполнить какие-то вычисления с использованием комплексных чисел.

Комплексные числа могут быть определены с использованием функции complex(
real, imag) или добавлением окончания j к числу с плавающей точкой.
"""

a = complex(2, 4)
b = 3 - 5j
print(a, b)

"""Реальное, мнимое и объединенное значения получить легко:"""
print(a.real)
print(a.imag)
print(a.conjugate())

"""Работают все обычные математические операторы:"""
print(a + b)
print(a * b)
print(a / b)

"""Для специальных операций с комплексными числами, таких как синусы, коси-
нусы или квадратные корни, используйте модуль cmath:"""
import cmath
print(cmath.sin(a))
print(cmath.cos(a))
print(cmath.exp(a))

"""
Большинство связанных с математикой модулей Python умеет работать с комплексными
числами. Например, если вы используете numpy, то сможете создавать
массивы комплексных чисел и выполнять операции над ними:
"""
import numpy as np
a = np.array([2+3j, 4+5j, 6-7j, 8+9j])
print(a)
print(a + 2)
print(np.sin(a))

"""
Стандартные математические функции, включенные в Python, не производят
комплексные значения по умолчанию, так что они вряд ли случайно возникнут
в вашем коде.
Если вы хотите получать в результате вычислений комплексные числа, то долж-
ны явно использовать cmath или соответствующим образом объявить это библио-
текам, которые умеют с ними работать. Например:
"""
import math
# math.sqrt(-1)                 # ValueError: math domain error

import cmath
print(cmath.sqrt(-1))