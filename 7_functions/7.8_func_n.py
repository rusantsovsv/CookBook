"""
У вас есть вызываемый объект, который вы хотели бы использовать в какой-то
программе Python – возможно, в качестве функции обратного вызова (callback
function) или обработчика (handler), но он принимает слишком много аргументов
и при вызове возбуждает исключение.

Если вам нужно уменьшить количество аргументов функции, используйте
functools.partial(). Функция partial() позволяет присваивать фиксированные зна-
чения одному или более аргументам, что уменьшает количество аргументов, ко-
торые должны быть переданы в последующих вызовах. Например, у вас есть вот
такая функция:
"""

def spam(a, b, c, d):
    print(a, b, c, d)

"""
А теперь попробуем partial(), чтобы зафиксировать значения некоторых аргу-
ментов:
"""
from functools import partial
s1 = partial(spam, 1)
s1(2, 3, 4)
s1(4, 5, 6)
print('-' * 20)

s2 = partial(spam, d=42)
s2(1, 2, 3)
s2(4, 5, 5)
print('-' * 20)

s3 = partial(spam, 1, 2, d=42)
s3(3)
s3(4)
s3(5)

"""
Понаблюдайте, как partial() фиксирует значения некоторых аргументов и воз-
вращает новый вызываемый объект. Этот новый вызываемый объект принимает
пока еще не получившие значения аргументы, объединяя их с аргументами, пере-
данными в partial(), и передает все в изначальную функцию.
"""

"""
Этот рецепт на самом деле связан с решением задачи обеспечения совместной ра-
боты, казалось бы, несовместимого кода. Проиллюстрируем это серией примеров.
Первый пример. Предположим, что у вас есть список точек, представленных
как кортежи координат (x, y). Вы можете использовать такую функцию для вычис-
ления расстояния между двумя точками:
"""
points = [(1, 2), (3, 4), (5, 6), (7, 8)]

import math
def distance(p1, p2):
    x1, y1 = p1
    x2, y2 = p2
    return math.hypot(x2 - x1, y2 - y1)

"""
А теперь предположим, что вы хотите отсортировать все точки по их расстоянию
до какой-то другой точки. Метод списков sort() принимает аргумент key,
который может быть использован для настройки поиска, но он работает только
с функциями, которые принимают один аргумент (то есть distance() не подходит).
Вот как вы можете использовать partial(), чтобы решить данную проблему:
"""

pt = (4, 3)
points.sort(key=partial(distance, pt))

print(points)